name: Test, Build And Release JASM

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'CHANGELOG.md'
  workflow_call:
    inputs:
      upload_url:
        required: true
        type: string

jobs:
  format:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./src

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Format
      run: dotnet format --verify-no-changes

  build:
    needs: format
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]
        build_type: [Regular, SelfContained]

    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Test
      run: dotnet test ${{ github.workspace }}\src

    - name: Build, publish and zip the app
      run: |
        python ${{ github.workspace }}\Build\Release.py ${{ matrix.build_type == 'SelfContained' && 'SelfContained' || '' }} ExcludeElevator
        echo "zipFile=JASM_v${{ github.ref }}_${{ matrix.build_type }}.7z" >> $GITHUB_ENV

    - name: List build directory
      run: dir ${{ github.workspace }}

    - name: Upload JASM
      uses: actions/upload-artifact@v3
      with:
        name: JASM_${{ matrix.build_type }}
        path: ${{ github.workspace }}\\${{ env.zipFile }}

  release:
    needs: build
    if: "${{ startsWith(github.event.head_commit.message, 'chore(main): release') }}"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download regular version build artifact
        uses: actions/download-artifact@v3
        with:
          name: JASM_Regular

      - name: Download self-contained version build artifact
        uses: actions/download-artifact@v3
        with:
          name: JASM_SelfContained

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get version
        id: get_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "VERSION=$latest_tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Use passed upload URL
        run: |
          echo "UPLOAD_URL=${{ inputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload regular version release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./JASM_${{ steps.get_version.outputs.VERSION }}.7z
          asset_name: JASM_${{ steps.get_version.outputs.VERSION }}.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload self-contained version release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./SelfContained_JASM_${{ steps.get_version.outputs.VERSION }}.7z
          asset_name: SelfContained_JASM_${{ steps.get_version.outputs.VERSION }}.7z
          asset_content_type: application/x-7z-compressed