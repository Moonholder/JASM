<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="GIMI_ModManager.WinUI.Views.CharacterManager.CreateCharacterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:characterManagerViewModels="using:GIMI_ModManager.WinUI.ViewModels.CharacterManagerViewModels"
    xmlns:controls="using:GIMI_ModManager.WinUI.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:GIMI_ModManager.WinUI.Views.CharacterManager"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="CreateCharacterPageName"
    mc:Ignorable="d">

    <Grid>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>


            <TextBlock Margin="0,8,0,8" Text="创建角色" />

            <ScrollViewer Grid.Row="1" Grid.Column="0">

                <StackPanel Spacing="8">

                    <StackPanel>
                        <TextBlock Text="角色图片" />
                        <local:InputWrapper InputField="{x:Bind ViewModel.Form.Image}">
                            <local:InputWrapper.Input>
                                <controls:CustomImage
                                    Width="300"
                                    Height="200"
                                    HorizontalAlignment="Left"
                                    ButtonHorizontalAlignment="Left"
                                    ClearButtonCommand="{x:Bind ViewModel.ClearImageCommand}"
                                    CopyButtonVisibility="Collapsed"
                                    EditButtonCommand="{x:Bind ViewModel.SelectImageCommand}"
                                    ImageUri="{x:Bind ViewModel.Form.Image.Value, Mode=TwoWay}"
                                    IsContextMenuEnabled="True"
                                    PasteButtonCommand="{x:Bind ViewModel.PasteImageCommand}" />
                            </local:InputWrapper.Input>
                        </local:InputWrapper>

                    </StackPanel>



                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.InternalName}">
                        <local:InputWrapper.Input>
                            <TextBox
                                MinWidth="200"
                                Header="内部名称 (必填)"
                                PlaceholderText="{x:Bind ViewModel.Form.InternalName.PlaceHolderText, Mode=OneWay}"
                                Text="{x:Bind ViewModel.Form.InternalName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </local:InputWrapper.Input>

                        <local:InputWrapper.HelpInfo>
                            <TextBlock IsTextSelectionEnabled="True" TextWrapping="WrapWholeWords">
                                内部名称由 JASM 用来识别角色 / 模组对象。它也被用作模组文件夹的名称。必须是独一无二的.
                                在角色创建之后更改这个名称，意味着 JASM 将会把它当作一个新角色来识别.
                            </TextBlock>
                        </local:InputWrapper.HelpInfo>
                    </local:InputWrapper>


                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.DisplayName}">
                        <local:InputWrapper.Input>
                            <TextBox
                                MinWidth="200"
                                Header="显示名称"
                                PlaceholderText="{x:Bind ViewModel.Form.DisplayName.PlaceHolderText, Mode=OneWay}"
                                Text="{x:Bind ViewModel.Form.DisplayName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </local:InputWrapper.Input>
                    </local:InputWrapper>

                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.ModFilesName}">
                        <local:InputWrapper.Input>
                            <TextBox
                                MinWidth="200"
                                Header="模组文件名称"
                                PlaceholderText="{x:Bind ViewModel.Form.ModFilesName.PlaceHolderText, Mode=OneWay}"
                                Text="{x:Bind ViewModel.Form.ModFilesName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </local:InputWrapper.Input>

                        <local:InputWrapper.HelpInfo>
                            <TextBlock IsTextSelectionEnabled="True" TextWrapping="WrapWholeWords">
                                在某些情况下，JASM能够尝试确定某个模组适用于哪个角色。在进行此项操作时，它会使用 “模组文件名（ModFilesName）” 文本尝试查找同名的模组文件。例如，假设 “模组文件名（ModFilesName）” 是 “paimon”，那么它将会匹配名为 “PaimonHeadLightMap.dds” 这样的文件。
                                如果您不希望 JASM 尝试匹配模组文件，可将其留空。
                            </TextBlock>
                        </local:InputWrapper.HelpInfo>
                    </local:InputWrapper>


                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.ReleaseDate}">
                        <local:InputWrapper.Input>
                            <CalendarDatePicker Date="{x:Bind ViewModel.Form.ReleaseDate.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="发布日期" />
                        </local:InputWrapper.Input>
                    </local:InputWrapper>

                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.Rarity}">
                        <local:InputWrapper.Input>
                            <StackPanel Orientation="Horizontal" Spacing="16">
                                <Slider
                                    Width="200"
                                    AutomationProperties.Name="Slider with ticks"
                                    Header="稀有度"
                                    Maximum="6"
                                    Minimum="0"
                                    SnapsTo="Ticks"
                                    TickFrequency="1"
                                    TickPlacement="Outside"
                                    Value="{x:Bind ViewModel.Form.Rarity.Value, Mode=TwoWay}" />
                                <TextBlock VerticalAlignment="Center" Text="{x:Bind ViewModel.Form.Rarity.Value, Mode=OneWay}" />
                            </StackPanel>
                        </local:InputWrapper.Input>
                    </local:InputWrapper>

                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.Element}">
                        <local:InputWrapper.Input>
                            <ComboBox
                                Header="属性"
                                ItemsSource="{x:Bind ViewModel.Elements}"
                                SelectedItem="{x:Bind ViewModel.SelectedElement, Mode=TwoWay}" />
                        </local:InputWrapper.Input>
                    </local:InputWrapper>

                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.IsMultiMod}">
                        <local:InputWrapper.Input>
                            <CheckBox Content="允许启用多个模组" IsChecked="{x:Bind ViewModel.Form.IsMultiMod.Value, Mode=TwoWay}" />
                        </local:InputWrapper.Input>

                        <local:InputWrapper.HelpInfo>
                            <TextBlock IsTextSelectionEnabled="True" TextWrapping="WrapWholeWords">
                                如果勾选此项，当针对该模组对象启用多个模组时，JASM 将不会显示警告信息.
                            </TextBlock>
                        </local:InputWrapper.HelpInfo>
                    </local:InputWrapper>




                </StackPanel>
            </ScrollViewer>

            <Grid
                Grid.Row="1"
                Grid.Column="1"
                Margin="8,0"
                Padding="4"
                Background="{ThemeResource LayerFillColorDefaultBrush}"
                CornerRadius="8">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock FontSize="16" Text="搜索关键词" />
                    <TextBox
                        Grid.Column="1"
                        PlaceholderText="搜索关键词..."
                        Text="{x:Bind ViewModel.NewKeyNameInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Grid.Column="2"
                        Margin="0,0,20,0"
                        HorizontalAlignment="Right"
                        Command="{x:Bind ViewModel.AddNewKeyCommand}"
                        Content="添加关键词" />

                    <Button
                        Grid.Column="3"
                        VerticalAlignment="Bottom"
                        Content="?">
                        <Button.Flyout>
                            <Flyout>
                                <Grid MaxWidth="200">
                                    <TextBlock
                                        IsTextSelectionEnabled="True"
                                        TextWrapping="WrapWholeWords"
                                        Text="JASM 使用关键词来帮助提升搜索功能。有些角色可能有多个名称，所以你可以添加额外的名称或搜索词条作为关键词。" />
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>


                <StackPanel Grid.Row="1">
                    <ListView ItemsSource="{x:Bind ViewModel.Form.Keys.Items, Mode=OneWay}" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <Grid
                                    Padding="4"
                                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                    ColumnSpacing="32"
                                    CornerRadius="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="16"
                                        IsTextSelectionEnabled="True"
                                        Text="{Binding Mode=OneWay}" />
                                    <Button
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        Command="{Binding ElementName=CreateCharacterPageName, Path=ViewModel.RemoveKeyCommand, Mode=OneWay}"
                                        CommandParameter="{Binding Mode=OneTime}"
                                        Content="移除" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.Keys}" />
                </StackPanel>


            </Grid>


            <Grid
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,16,0,0">
                <StackPanel
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    Spacing="40">
                    <Button Command="{x:Bind ViewModel.ExportCharacterCommand}">导出角色的 JSON 文件</Button>
                    <Button Command="{x:Bind ViewModel.OpenCustomCharacterJsonFileCommand}">打开自定义角色的 JSON 文件</Button>
                    <Button Background="{ThemeResource AccentFillColorDefaultBrush}" Command="{x:Bind ViewModel.SaveCharacterCommand}">创建角色</Button>
                </StackPanel>
            </Grid>


        </Grid>

    </Grid>
</Page>
