<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="GIMI_ModManager.WinUI.Views.CharacterManager.EditCharacterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:characterManagerViewModels="using:GIMI_ModManager.WinUI.ViewModels.CharacterManagerViewModels"
    xmlns:controls="using:GIMI_ModManager.WinUI.Views.Controls"
    xmlns:controls1="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:GIMI_ModManager.WinUI.Views.CharacterManager"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:GIMI_ModManager.WinUI.ViewModels"
    x:Name="EditCharacterPageRoot"
    mc:Ignorable="d">

    <Grid
        x:Name="EditCharacterPageGrid"
        Padding="4"
        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
        CornerRadius="10">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Margin="0,0,0,4">
            <Grid.ColumnDefinitions>

                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="角色模组文件夹:" />
                <controls:LinkButton
                    Link="{x:Bind ViewModel.ModFolderUri, Mode=TwoWay}"
                    ToolTipService.ToolTip="打开角色的模组文件夹"
                    Text="{x:Bind ViewModel.ModFolderString, Mode=TwoWay}" />

                <Button Command="{x:Bind ViewModel.GoToCharacterCommand}">转到角色</Button>
            </StackPanel>


            <Button
                Grid.Column="1"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.DisableCharacterCommand, Mode=OneWay}"
                Content="禁用角色"
                IsEnabled="{x:Bind ViewModel.CharacterStatus.IsEnabledAndNotCustomCharacter, Mode=OneWay}"
                ToolTipService.ToolTip="首先打开一个弹出窗口，其中包含更多信息"
                Visibility="{x:Bind ViewModel.CharacterStatus.IsEnabledAndNotCustomCharacter, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Button
                Grid.Column="1"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.EnableCharacterCommand, Mode=OneWay}"
                Content="启用角色"
                IsEnabled="{x:Bind ViewModel.CharacterStatus.IsDisabledAndNotCustomCharacter, Mode=OneWay}"
                ToolTipService.ToolTip="首先打开一个弹出窗口，其中包含更多信息"
                Visibility="{x:Bind ViewModel.CharacterStatus.IsDisabledAndNotCustomCharacter, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

            <Button
                Grid.Column="1"
                HorizontalAlignment="Right"
                Command="{x:Bind ViewModel.DeleteCustomCharacterCommand, Mode=OneWay}"
                Content="删除自定义角色"
                IsEnabled="{x:Bind ViewModel.CharacterStatus.IsCustomCharacter, Mode=OneWay}"
                ToolTipService.ToolTip="首先打开一个弹出窗口，其中包含更多信息"
                Visibility="{x:Bind ViewModel.CharacterStatus.IsCustomCharacter, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />



        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <Grid CornerRadius="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.Image}">
                        <local:InputWrapper.Input>
                            <controls:CustomImage
                                Width="300"
                                Height="200"
                                ButtonHorizontalAlignment="Left"
                                ClearButtonCommand="{x:Bind ViewModel.ClearImageCommand}"
                                CopyButtonVisibility="Collapsed"
                                EditButtonCommand="{x:Bind ViewModel.PickImageCommand}"
                                ImageUri="{x:Bind ViewModel.Form.Image.Value, Mode=TwoWay}"
                                IsContextMenuEnabled="True"
                                PasteButtonCommand="{x:Bind ViewModel.PasteImageCommand}" />
                        </local:InputWrapper.Input>
                    </local:InputWrapper>

                    <StackPanel
                        Grid.Row="1"
                        Margin="0,4"
                        Orientation="Horizontal"
                        Spacing="8">
                        <StackPanel
                            VerticalAlignment="Center"
                            Background="{ThemeResource ControlFillColorSecondaryBrush}"
                            Orientation="Horizontal"
                            Spacing="8">
                            <TextBlock Text="内部名称 (Id): " />
                            <TextBlock
                                IsTextSelectionEnabled="True"
                                Style="{ThemeResource BodyStrongTextBlockStyle}"
                                Text="{x:Bind ViewModel.Form.InternalName.Value}" />
                        </StackPanel>

                        <Button Content="?">
                            <Button.Flyout>
                                <Flyout>
                                    <TextBlock
                                        MaxWidth="300"
                                        IsTextSelectionEnabled="True"
                                        TextWrapping="WrapWholeWords">
                                        内部名称由 JASM 用来识别角色 / 模组对象。它也被用作模组文件夹的名称。必须是独一无二的。
                                        在角色创建之后更改此名称意味着 JASM 会将其识别为一个新角色。
                                    </TextBlock>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>



                    <StackPanel Grid.Row="2" Spacing="8">

                        <local:InputWrapper InputField="{x:Bind ViewModel.Form.DisplayName}">
                            <local:InputWrapper.Input>
                                <TextBox
                                    MinWidth="200"
                                    Header="显示名称"
                                    PlaceholderText="{x:Bind ViewModel.Form.DisplayName.PlaceHolderText, Mode=OneWay}"
                                    Text="{x:Bind ViewModel.Form.DisplayName.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </local:InputWrapper.Input>
                        </local:InputWrapper>

                        <local:InputWrapper InputField="{x:Bind ViewModel.Form.IsMultiMod}">
                            <local:InputWrapper.Input>
                                <CheckBox Content="允许启用多个模组" IsChecked="{x:Bind ViewModel.Form.IsMultiMod.Value, Mode=TwoWay}" />
                            </local:InputWrapper.Input>

                            <local:InputWrapper.HelpInfo>
                                <TextBlock IsTextSelectionEnabled="True" TextWrapping="WrapWholeWords">
                                    如果勾选此项，当为此模组对象启用多个模组时，JASM 将不会显示警告信息。
                                </TextBlock>
                            </local:InputWrapper.HelpInfo>
                        </local:InputWrapper>
                    </StackPanel>





                </Grid>

                <StackPanel
                    Margin="8,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <TextBlock Text="模组数量:" />
                    <TextBlock
                        Margin="8,0,0,0"
                        FontSize="20"
                        Text="{x:Bind ViewModel.ModsCount, Mode=TwoWay}" />

                    <ListView ItemsSource="{x:Bind ViewModel.Mods}" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="characterManagerViewModels:ModModel">
                                <Grid
                                    Padding="4"
                                    Background="{ThemeResource ControlFillColorSecondaryBrush}"
                                    ColumnSpacing="16">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        IsTextSelectionEnabled="True"
                                        ToolTipService.ToolTip="添加至 JASM 的日期"
                                        Text="{x:Bind DateAdded}" />

                                    <TextBlock
                                        Grid.Column="0"
                                        HorizontalAlignment="Left"
                                        IsTextSelectionEnabled="True"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTipService.ToolTip="{x:Bind Path=DisplayName}"
                                        Text="{x:Bind DisplayName}" />



                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </StackPanel>


            </StackPanel>

            <Grid
                Grid.Column="1"
                Margin="8,0"
                Padding="4"
                Background="{ThemeResource LayerFillColorDefaultBrush}"
                CornerRadius="8">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock FontSize="16" Text="搜索关键词:" />
                    <TextBox
                        Grid.Column="1"
                        PlaceholderText="搜索关键词..."
                        Text="{x:Bind ViewModel.KeyToAddInput, Mode=TwoWay}" />
                    <Button
                        Grid.Column="2"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Right"
                        Command="{x:Bind ViewModel.AddKeyCommand}"
                        Content="添加关键词" />

                    <Button
                        Grid.Column="3"
                        VerticalAlignment="Bottom"
                        Content="?">
                        <Button.Flyout>
                            <Flyout>
                                <Grid MaxWidth="200">
                                    <TextBlock
                                        IsTextSelectionEnabled="True"
                                        TextWrapping="WrapWholeWords"
                                        Text="JASM 利用关键词来助力提升搜索功能。有些角色可能拥有多个名称，因此你可以添加额外的名称或搜索词条作为关键词。" />
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>

                <StackPanel Grid.Row="1">

                    <ListView ItemsSource="{x:Bind ViewModel.Form.Keys.Items}" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <Grid
                                    Padding="4"
                                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                    ColumnSpacing="32"
                                    CornerRadius="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="16"
                                        IsTextSelectionEnabled="True"
                                        Text="{Binding Mode=OneTime}" />
                                    <Button
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        Command="{Binding ElementName=EditCharacterPageRoot, Path=ViewModel.RemoveKeyCommand, Mode=OneTime}"
                                        CommandParameter="{Binding Mode=OneTime}"
                                        Content="移除" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                    </ListView>
                    <local:InputWrapper InputField="{x:Bind ViewModel.Form.Keys}" />
                </StackPanel>
            </Grid>



            <Grid
                Grid.Column="2"
                Width="150"
                HorizontalAlignment="Right">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Button
                    Grid.Row="0"
                    Margin="0,16"
                    HorizontalAlignment="Center"
                    Command="{x:Bind ViewModel.RevertChangesCommand}"
                    Content="撤销更改"
                    ToolTipService.ToolTip="Reverts changes not saved" />
                <Button
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Background="{ThemeResource AccentFillColorDefaultBrush}"
                    Command="{x:Bind ViewModel.DummySaveCommand}"
                    Content="保存更改"
                    ToolTipService.ToolTip="将更改保存到磁盘">
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <Button Command="{x:Bind ViewModel.SaveChangesCommand}" Content="保存" />
                        </Flyout>
                    </Button.Flyout>
                </Button>


                <Button
                    Grid.Row="3"
                    HorizontalAlignment="Stretch"
                    Command="{x:Bind ViewModel.ShowCharacterModelCommand}">
                    <Button.Content>
                        <TextBlock TextWrapping="WrapWholeWords" Text="显示角色数据模型..." />
                    </Button.Content>
                </Button>


            </Grid>
        </Grid>

        <Grid Grid.Row="1" VerticalAlignment="Bottom">
            <Button
                Width="200"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Content="重置角色"
                ToolTipService.ToolTip="将角色的各项数值重置为默认值"
                Visibility="{x:Bind ViewModel.IsNotCustomCharacter, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button.Flyout>
                    <Flyout>
                        <Button Command="{x:Bind ViewModel.ResetCharacterToDefaultCommand}" Content="重置角色设置" />
                    </Flyout>
                </Button.Flyout>
            </Button>
        </Grid>

    </Grid>
</Page>
